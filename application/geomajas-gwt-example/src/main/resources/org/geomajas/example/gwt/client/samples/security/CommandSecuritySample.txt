	public Canvas getViewPanel() {
		final VLayout layout = new VLayout();
		layout.setMembersMargin(10);
		layout.setWidth100();
		layout.setHeight100();

		// Create horizontal layout for login buttons:
		HLayout buttonLayout = new HLayout();
		buttonLayout.setMembersMargin(10);
		buttonLayout.setHeight(20);

		// Create a button that logs in user "mark":
		IButton loginButtonMarino = new IButton(I18nProvider.getSampleMessages().securityLogInWith("mark"));
		loginButtonMarino.setWidth(150);
		loginButtonMarino.addClickHandler(new ClickHandler() {

			public void onClick(ClickEvent event) {
				Authentication.getInstance().login("mark", "mark", null);
			}
		});
		buttonLayout.addMember(loginButtonMarino);

		// Create a button that logs in user "luc":
		IButton loginButtonLuc = new IButton(I18nProvider.getSampleMessages().securityLogInWith("luc"));
		loginButtonLuc.setWidth(150);
		loginButtonLuc.addClickHandler(new ClickHandler() {

			public void onClick(ClickEvent event) {
				Authentication.getInstance().login("luc", "luc", null);
			}
		});
		buttonLayout.addMember(loginButtonLuc);

		// Create horizontal layout for login buttons:
		HLayout commandLayout = new HLayout();
		commandLayout.setMembersMargin(10);
		commandLayout.setHeight(20);

		// Create a button that calls the GetMapConfigurationCommand:
		IButton getMapButton = new IButton("command.GetMap");
		getMapButton.setWidth(150);
		getMapButton.addClickHandler(new ClickHandler() {

			public void onClick(ClickEvent event) {
				GwtCommand commandRequest = new GwtCommand(GetMapConfigurationRequest.COMMAND);
				commandRequest.setCommandRequest(new GetMapConfigurationRequest("mapOsm", "gwt-samples"));
				GwtCommandDispatcher.getInstance().execute(commandRequest, new CommandCallback() {

					public void execute(CommandResponse response) {
						SC.say("Command executed successfully");
					}
				});
			}
		});
		commandLayout.addMember(getMapButton);

		// Create a button that calls the GetMapConfigurationCommand:
		IButton getResourcesButton = new IButton("command.GetResources");
		getResourcesButton.setWidth(150);
		getResourcesButton.addClickHandler(new ClickHandler() {

			public void onClick(ClickEvent event) {
				GetResourcesRequest request = new GetResourcesRequest(
						new String[] { "WEB-INF/security.xml" });
				GwtCommand command = new GwtCommand("example.gwt.server.samples.GetSourceCommand");
				command.setCommandRequest(request);
				GwtCommandDispatcher.getInstance().execute(command, new CommandCallback() {

					public void execute(CommandResponse response) {
						// User mark should never get here...
						SC.say("Command executed successfully");
					}
				});
			}
		});
		commandLayout.addMember(getResourcesButton);

		layout.addMember(buttonLayout);
		layout.addMember(commandLayout);
		return layout;
	}