<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ This is part of Geomajas, a GIS framework, http://www.geomajas.org/.
  ~
  ~ Copyright 2008-2013 Geosparc nv, http://www.geosparc.com/, Belgium.
  ~
  ~ The program is available in open source according to the GNU Affero
  ~ General Public License. All contributions in this program are covered
  ~ by the Geomajas Contributors License Agreement. For full licensing
  ~ details, see LICENSE.txt in the project root.
  -->
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<chapter id="chapter-configuration">
  <title>Configuration</title>

  <para></para>

  <section id="dependencies">
    <title>Dependencies</title>

    <para>Make sure your include the plug-in in your project. If you are using
    Maven and the geomajas-dep dependency to manage versions, include
    following dependency to your pom:</para>

    <example>
      <title>Google layer dependency, using geomajas-dep</title>

      <programlisting>&lt;dependency&gt;
    &lt;groupId&gt;org.geomajas.plugin&lt;/groupId&gt;
    &lt;artifactId&gt;geomajas-layer-google&lt;/artifactId&gt;
&lt;/dependency&gt;</programlisting>
    </example>

    <para>If you are not using geomajas-dep to manage versions, then you need
    to mention the version explicitly.</para>

    <example>
      <title>Google layer dependency, explicit version</title>

      <programlisting>&lt;dependency&gt;
    &lt;groupId&gt;org.geomajas.plugin&lt;/groupId&gt;
    &lt;artifactId&gt;geomajas-layer-google&lt;/artifactId&gt;
    &lt;version&gt;<?eval ${project.version}?>&lt;/version
&lt;/dependency&gt;</programlisting>
    </example>

    <para>If you want to use these as part of an application using the GWT
    face, then the dependencies change to:</para>

    <example>
      <title>Google layer dependency for GWT, using geomajas-dep</title>

      <programlisting>&lt;dependency&gt;
    &lt;groupId&gt;org.geomajas.plugin&lt;/groupId&gt;
    &lt;artifactId&gt;geomajas-layer-google-gwt&lt;/artifactId&gt;
&lt;/dependency&gt;
</programlisting>
    </example>

    <para>If you are not using geomajas-dep to manage versions, then you need
    to mention the version explicitly.</para>

    <example>
      <title>Google layer dependency for GWT, explicit version</title>

      <programlisting>&lt;dependency&gt;
    &lt;groupId&gt;org.geomajas.plugin&lt;/groupId&gt;
    &lt;artifactId&gt;geomajas-layer-google-gwt&lt;/artifactId&gt;
    &lt;version&gt;<?eval ${project.version}?>&lt;/version
&lt;/dependency&gt;
</programlisting>
    </example>
  </section>

  <section id="graster">
    <title>Google raster layer</title>

    <section id="gmap-base">
      <title>Base configuration</title>

      <warning>
        <para>When using the Google layer, it is your responsibility to comply
        with the Google's terms of use. Some sources of information about
        these terms include <ulink
        url="http://code.google.com/apis/maps/">http://code.google.com/apis/maps/</ulink>,
        <ulink
        url="http://code.google.com/intl/nl/apis/maps/terms.html">http://code.google.com/intl/nl/apis/maps/terms.html</ulink>
        and <ulink
        url="http://www.google.com/intl/en_ALL/help/terms_maps.html">http://www.google.com/intl/en_ALL/help/terms_maps.html</ulink>.
        Some of the things you need to do include adding the Google API code
        in your application (using a Google API key when not running on
        localhost), and (from the GWT face), using the
        <code>GoogleAddon</code> class to assure the copyright notices are
        displayed on the map.</para>
      </warning>

      <para>A base Google layer configuration looks as follows:</para>

      <xi:include href="listing/SimpleGoogleConfig.xml"
                  xmlns:xi="http://www.w3.org/2001/XInclude" />

      <warning>
        <para>If you are using 1.7.1 or earlier of the OpenStreetMap plug-in
        then this configuration will not work. In that version we simplified
        configuration by not forcing you to configure values you are not
        allowed to change anyway. For the old version, the configuration would
        look like this:</para>

        <xi:include href="listing/GoogleLayerSample.xml"
                    xmlns:xi="http://www.w3.org/2001/XInclude" />

        <para>Note that these older versions do not allow all of the other
        configurations.</para>
      </warning>

      <para>You can add some properties to define the kind of images which are
      produced. By default, the layer displays road information, but this can
      be changed to either satellite or physical (roads+elevation) imagery.
      The view style modes are exclusive, last set will be valid</para>

      <table>
        <title>GoogleLayer image type configuration</title>

        <tgroup cols="2">
          <colspec colnum="1" colwidth="1*" />

          <colspec colnum="2" colwidth="2*" />

          <thead>
            <row>
              <entry>GoogleLayer configuration</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>satellite</entry>

              <entry>Set to true to use satellite view from Google. When this
              and physical are false (the default), the normal view (showing
              streets) will be used. Setting to true will reset physical to
              false.</entry>
            </row>

            <row>
              <entry>physical</entry>

              <entry>Set to true to use physical view from Google. When this
              and satellite are false, the normal view (showing streets) will
              be used. Setting to true will reset satellite to false.</entry>
            </row>

            <row>
              <entry>maxZoomLevel</entry>

              <entry>Set to a number for which maps are available in the
              region of interest, defaults to 19. The first zoom level has one
              tile for the entire world, the second has four tiles
              etc.</entry>
            </row>
          </tbody>
        </tgroup>
      </table>

      <para>These are used in the following configuration.</para>

      <xi:include href="listing/GoogleSatellite.xml"
                  xmlns:xi="http://www.w3.org/2001/XInclude" />

      <para>Alternatively, you can also configure the display style using the
      dataSourceName property in the layer info. This is shown in the example
      below. However, it is preferred to use the properties on the layer
      itself. This can be useful for the dojo face, which uses this property
      to detect Google layers. Note that the suffix "@GoogleLayer" will
      automatically be added. Possible values are "G_NORMAL_MAP",
      "G_SATELLITE_MAP" and "G_PHYSICAL_MAP".</para>

      <xi:include href="listing/GoogleSatelliteDs.xml"
                  xmlns:xi="http://www.w3.org/2001/XInclude" />
    </section>

    <section id="imgsource">
      <title>Image source configuration</title>

      <para>You can also force the set of URLs to choose from, as in the
      following example. Note that this may fail when setting the image type.
      You can define the different options using ${level}, ${x} and ${y} for
      the zoom level and tile coordinate. A simple configuration looks like
      this:</para>

      <xi:include href="listing/GoogleCustomUrls.xml"
                  xmlns:xi="http://www.w3.org/2001/XInclude" />

      <para>The Google layer allows configuration of the strategy to choose
      the server to provide the tiles. Each of the image types can be served
      from four servers. The default behaviour is to select the server using a
      round robin strategy.</para>

      <para>The strategy can also be configured. For example, the sample below
      selects the class to use for the URL selection strategy (this needs to
      implement UrlSelectionStrategy).</para>

      <xi:include href="listing/GoogleCustomUrlStrategy.xml"
                  xmlns:xi="http://www.w3.org/2001/XInclude" />

      <para></para>
    </section>

    <section id="zoom">
      <title>Zoom level configuration</title>

      <para>By default the maximum zoom level is 19, but this can be modified
      using the maxZoomLevel property if your data source supports a different
      level.</para>

      <xi:include href="listing/GoogleMaxZoomLevelConfig.xml"
                  xmlns:xi="http://www.w3.org/2001/XInclude" />
    </section>
  </section>

  <section id="mapaddon">
    <title>Using the Google map add-on</title>

    <para>To enable the display of copyright information on the map (to comply
    with Google's terms of use), you should use the GoogleAddon. This can be
    done using a line of code like:</para>

    <example>
      <title>Using the GoogleAddon</title>

      <programlisting>map.registerMapAddon(
    new GoogleAddon("google", map, GoogleAddon.MapType.SATELLITE, false));</programlisting>
    </example>

    <para>This needs to be called on the MapWidget object. The first parameter
    is the DOM id for the object, the second the map widget itself, the third
    the type of imagery which needs to be used and the last indicates whether
    the Google map should be made visible.</para>

    <para>Note that you will need to add the Google API key in your html
    source file to assure this can work (otherwise you will probably get an
    exception from Google when not accessing the page on localhost.</para>
  </section>
</chapter>
