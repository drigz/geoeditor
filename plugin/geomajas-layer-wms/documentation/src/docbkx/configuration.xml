<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ This is part of Geomajas, a GIS framework, http://www.geomajas.org/.
  ~
  ~ Copyright 2008-2013 Geosparc nv, http://www.geosparc.com/, Belgium.
  ~
  ~ The program is available in open source according to the GNU Affero
  ~ General Public License. All contributions in this program are covered
  ~ by the Geomajas Contributors License Agreement. For full licensing
  ~ details, see LICENSE.txt in the project root.
  -->
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
"http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<chapter id="chapter-configuration">
  <title>Configuration</title>

  <section id="dependencies">
    <title>Dependencies</title>

    <para>Make sure sure you include the correct version of the plug-in in
    your project. Use the following excerpt (with the correct version) in the
    dependencyManagement section of your project:</para>

    <informalexample>
      <programlisting> &lt;dependency&gt;
    &lt;groupId&gt;org.geomajas.plugin&lt;/groupId&gt;
    &lt;artifactId&gt;geomajas-plugin-wms-all&lt;/artifactId&gt;
    &lt;version&gt;1.8.0&lt;/version&gt;
    &lt;type&gt;pom&lt;/type&gt;
    &lt;scope&gt;import&lt;/scope&gt;
&lt;/dependency&gt;
</programlisting>
    </informalexample>

    <para>If you are using geomajas-dep, this includes the latest released
    version of the wms layer (at the time of publishing of that version). If
    you want to overwrite the caching plug-in version, make sure to include
    this excerpt <emphasis>before</emphasis> the geomajas-dep
    dependency.</para>

    <para>You can now include the actual dependency without explicit
    version.</para>

    <example>
      <title>WMS layer dependency</title>

      <programlisting>&lt;dependency&gt;
    &lt;groupId&gt;org.geomajas.plugin&lt;/groupId&gt;
    &lt;artifactId&gt;geomajas-layer-wms&lt;/artifactId&gt;
&lt;/dependency&gt;</programlisting>
    </example>

    <para>If you are using the GWT face and want the access the GetFeatureInfo
    capability of your WMS server, then you should use the following
    dependency instead.</para>

    <example>
      <title>WMS layer dependency</title>

      <programlisting>&lt;dependency&gt;
    &lt;groupId&gt;org.geomajas.plugin&lt;/groupId&gt;
    &lt;artifactId&gt;geomajas-layer-wms-gwt-&lt;/artifactId&gt;
&lt;/dependency&gt;</programlisting>
    </example>

    <para>In that case you should also put "&lt;inherits
    name="org.geomajas.layer.wms.GeomajasWms"/&gt;" in your .gwt.xml
    file.</para>
  </section>

  <section id="wmsconf">
    <title>WMS layer configuration</title>

    <section>
      <title>Defining a WMS layer</title>

      <para>A complete WMS layer configuration looks as follows:</para>

      <xi:include href="listing/WmsLayerSample.xml"
                  xmlns:xi="http://www.w3.org/2001/XInclude"/>

      <para>
        <caution>
          <para>The correct display of a WMS layer with respect to other
          layers can only be assured if the CRS of the layer is the same as the CRS
          of the map. If the CRS values differ, the effect may be
          translation or distortion of the layer data when drawn on the
          map. Change the CRS of the map if necessary.</para>
        </caution>
      </para>

      <para>The first property is the layer info object, which describes the
      metadata common to all raster layers. Visit the <ulink
      url="http://files.geomajas.org/maven/trunk/geomajas/docbook-devuserguide/html/master.html#conf-raster">Geomajas
      developer guide</ulink> to learn more about it. This guide will focus on
      the WMS specific configuration options.</para>

      <para>
        <remark>The most important parameter here, is the dataSourceName,
        which must point to a layer name as specified by the WMS server. Note
        that comma separated values are supported, as the layer name is
        literally used in the WMS requests.</remark>
      </para>

      <para>As you can see, the bean class refers to the actual layer type:
      <code>org.geomajas.layer.wms.WmsLayer</code>. The layer object contains
      some extra properties which are specifically tied to the WMS server.
      Some of these are required, some are optional.</para>

      <table>
        <title>WMS layer properties</title>

        <tgroup cols="2">
          <colspec colnum="1" colwidth="1*"/>

          <colspec colnum="2" colwidth="2*"/>

          <thead>
            <row>
              <entry>Name</entry>

              <entry>Description</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>
                <emphasis role="bold">baseWmsUrl
                <emphasis>(required)</emphasis></emphasis>
              </entry>

              <entry>The base url of the WMS server. This is the base part
              (excluding the request parameters) of the url that would be
              called to execute a WMS request.</entry>
            </row>

            <row>
              <entry>
                <emphasis role="bold">version<emphasis>
                (optional)</emphasis></emphasis>
              </entry>

              <entry>Version of the WMS protocol which should be used. Check
              your server configuration for possible values. This defaults to
              "1.1.1".</entry>
            </row>

            <row>
              <entry>
                <emphasis role="bold">format
                <emphasis>(optional)</emphasis></emphasis>
              </entry>

              <entry>The mime type in which the images should be returned, for
              example "image/gif". Check your server configuration for
              possible values. This defaults to "image/png".</entry>
            </row>

            <row>
              <entry>
                <emphasis role="bold">styles
                <emphasis>(optional)</emphasis></emphasis>
              </entry>

              <entry>Some WMS servers support multiple styles for their
              layers. Check your server configuration for possible
              values.</entry>
            </row>

            <row>
              <entry>
                <emphasis role="bold">parameters<emphasis>
                (optional)</emphasis></emphasis>
              </entry>

              <entry>You can define additional parameters which can be passed
              to the WMS server for each GetMap request. These are name/value
              pairs which are passed in
              <code>org.geomajas.configuration.Parameter</code> objects. See
              "<link linkend="wms_extra_params">Adding extra
              parameters</link>" for more information.</entry>
            </row>

            <row>
              <entry><emphasis role="bold">authentication</emphasis>
              (optional)</entry>

              <entry>Optional basic or digest HTTP authentication. This bean
              is of the type:
              <code>org.geomajas.layer.common.proxy.LayerAuthentication</code>.
              When set, the WMS request is automatically proxied to assure
              that credentials are not leaked to the client. See "<link
              linkend="wms_authentication">Using authentication</link>" for
              more information.</entry>
            </row>

            <row>
              <entry><emphasis role="bold">useProxy</emphasis>
              (optional)</entry>

              <entry>Allows you to force the use of a proxy to get the image.
              This can be useful if you want to hide the WMS URL (excluding
              the parameters that is). This is automatically enabled when the
              authentication property is set (to assure that credentials are
              not visible on the user).</entry>
            </row>

            <row>
              <entry><emphasis role="bold">useCache</emphasis>
              (optional)</entry>

              <entry>Allows you to force caching of WMS tiles.This can be
              useful if you want to unload the used WMS server. This
              automatically enables the useProxy property to be able to cache
              the images.</entry>
            </row>

            <row>
              <entry><emphasis role="bold">enableFeatureInfoSupport</emphasis>
              (optional)</entry>

              <entry>Setting this to true allows you to use the SearchByPoint
              command to access the GetFeatureInfo capability of the WMS
              server.</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </section>

    <section>
      <title id="wms_extra_params">Adding extra parameters to the WMS
      requests</title>

      <para>In the previous paragraph, we mentioned the possibility to
      configure extra parameters to be passed to the WMS server when executing
      the GetMap requests. This option can be useful for example for
      configuring the use of transparency.</para>

      <para>Below is an example of a WMS layer configuration which uses
      transparency:</para>

      <para><programlisting>&lt;bean name="wms03" class="org.geomajas.layer.wms.WmsLayer" &gt;
    &lt;property name="layerInfo" ref="wms03Info" /&gt;

    &lt;!-- When configuring your own applications, please do not use this WMS server --&gt;
    &lt;property name="baseWmsUrl" value="http://apps.geomajas.org/geoserver/wms" /&gt;
    &lt;property name="version" value="1.1.1"/&gt;
    &lt;property name="format" value="image/png;%20mode=24bit"/&gt;
    &lt;property name="styles" value=""/&gt;
    &lt;property name="parameters"&gt;
        &lt;list&gt;
            &lt;bean class="org.geomajas.configuration.Parameter"&gt;
                &lt;property name="name" value="transparent" /&gt;
                &lt;property name="value" value="TRUE" /&gt;
            &lt;/bean&gt;
        &lt;/list&gt;
    &lt;/property&gt;
&lt;/bean&gt;</programlisting></para>
    </section>

    <section>
      <title id="wms_authentication">Using authentication</title>

      <para>The optional HTTP authentication allows the WMS layer to send user
      credentials to the WMS server in the HTTP headers. Although this is an
      option, often WMS server will be secured, and require such
      authentication. Below is an example of a WMS layer configuration that
      uses the HTTP authentication:</para>

      <programlisting>&lt;bean name="wmsOrtho" class="be.geomajas.layer.wms.WmsLayer" &gt;
    &lt;property name="layerInfo" ref="wmsOrthoInfo" /&gt;

    &lt;property name="baseWmsUrl" value="http://ogc.beta.agiv.be/ogc/wms/orthoklm" /&gt;
    &lt;property name="version" value="1.3.0" /&gt;
    &lt;property name="format" value="image/jpeg" /&gt;
    &lt;property name="styles" value="" /&gt;
        
    &lt;property name="authentication"&gt;
        &lt;bean class="be.geomajas.layer.common.proxy.LayerHttpAuthentication"&gt;
            &lt;property name="user" value="&lt;the user name&gt;" /&gt;
            &lt;property name="password" value="&lt;password&gt;" /&gt;
            &lt;property name="realm" value="&lt;optional realm&gt;" /&gt;
            &lt;property name="applicationUrl" value="&lt;the URL for this web application&gt;" /&gt;
        &lt;/bean&gt;
    &lt;/property&gt;
&lt;/bean&gt;</programlisting>

      <para>Let us go over the properties for the authentication bean:</para>

      <table>
        <title>WMS authentication properties</title>

        <tgroup cols="2">
          <colspec colnum="1" colwidth="1*"/>

          <colspec colnum="2" colwidth="2*"/>

          <thead>
            <row>
              <entry>Name</entry>

              <entry>Description</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry><emphasis role="bold">user
              <emphasis>(required)</emphasis></emphasis></entry>

              <entry>The user login name.</entry>
            </row>

            <row>
              <entry><emphasis role="bold">password<emphasis>
              (required)</emphasis></emphasis></entry>

              <entry>The users password.</entry>
            </row>

            <row>
              <entry><emphasis role="bold">realm
              <emphasis>(optional)</emphasis></emphasis></entry>

              <entry>The HTTP realm for this user. This is an optional
              value.</entry>
            </row>

            <row>
              <entry><emphasis role="bold">authenticationMethod
              <emphasis>(optional)</emphasis></emphasis></entry>

              <entry>Authentication method to use. Options are
              <code>LayerAuthenticationMethod.BASIC</code> (default) and
              <code>LayerAuthenticationMethod.URL</code>.</entry>
            </row>

            <row>
              <entry><emphasis role="bold">userKey</emphasis>
              <emphasis>(optional)</emphasis></entry>

              <entry>Key which is used to pass the user name when using the
              URL authentication type.</entry>
            </row>

            <row>
              <entry><emphasis role="bold">passwordKey</emphasis>
              <emphasis>(optional)</emphasis></entry>

              <entry>Key which is used to set the password when using the URL
              authentication type.</entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </section>

    <section>
      <title>Using the proxy</title>

      <para>When using the optional Proxy setting you can provide extra
      HttpRequest interceptors which will be used by the proxy to further
      customise your requests (add extra parameters / headers for security or
      do some logging). To add interceptors add a bean of type
      LayerHttpServiceInterceptors to your spring configuration. This contains
      a map of HttpRequestInterceptor lists. The key is the name of a layer or
      the prefix to the baseUrl property of the RasterLayerInfo object.</para>

      <para>To add an interceptor to all layers use an empty key (eg. ""). To
      add an interceptor to a specific layer use the name of this
      layer.</para>

      <para>Sample bean configuration:</para>

      <para><programlisting>&lt;bean name="interceptors" class="org.geomajas.layer.common.proxy.LayerHttpServiceInterceptors"&gt;
   &lt;property name="map"&gt;
      &lt;map&gt;
         &lt;entry key=""&gt;
            &lt;list&gt;
               &lt;bean class="org.geomajas.layer.wms.sample.AddSomeLeetHeadersHttpRequestInterceptor" /&gt;
            &lt;/list&gt;
         &lt;/entry&gt;
      &lt;/map&gt;
   &lt;/property&gt;
&lt;/bean&gt;</programlisting></para>
    </section>
  </section>
</chapter>
